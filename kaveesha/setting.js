const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")

cmd({
    pattern: "settings",
    alias: ["setting"],
    desc: "settings the bot",
    category: "owner",
    react: "‚öô",
    filename: __filename


},
async (conn, mek, m, { from, isOwner, quoted, reply }) => {
    if (!isOwner) return reply("‚ùå You are not the owner!");
    try {
        let desc = `*‚ï≠‚îÄ‚îÄ‚îÄ‚ïé‚óàùóóùóÆùóøùó∏ ùóªùó≤ùóøùóº ùòÑùóÆùòÅùòÄùóÆùóΩùóΩ ùóØùóºùòÅ ‚óà‚ïé‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ*

> *ü•∑üíÄ ùóóùóÆùóøùó∏ ùóªùó≤ùóøùóº ùòÑùóÆùòÅùòÄùóÆùóΩùóΩ ùóØùóºùòÅ ùòÄùó≤ùòÅùòÅùó∂ùóªùó¥ ùóΩùóÆùóªùó≤ùóπ*

- *üî¢ Reply Below Number*

‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£ ùêåùêéùêÉùêÑ*
*1.1 ‚ïé ‚õ≠  PUBLIC üóÉÔ∏è*
*1.2 ‚ïé ‚õ≠  PRIVATE üîê*
*1.3 ‚ïé ‚õ≠  GROUPS üéõÔ∏è*
*1.4 ‚ïé ‚õ≠  INBOX üé≠*
‚ú§ ============================ ‚ú§

* *2Ô∏è‚É£ ùêÄùêîùêìùêé ùêïùêéùêàùêÇùêÑ*
*2.1 ‚ïé ‚õ≠ TRUE üîë*
*2.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *3Ô∏è‚É£ ùêÄùêîùêìùêé ùêíùêìùêÄùêìùêîùêí ùêíùêÑùêÑùêç*
*3.1 ‚ïé ‚õ≠ TRUE üîë*
*3.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *4Ô∏è‚É£ ùêÄùêîùêìùêé ùêíùêìùêàùêÇùêäùêÑùêë*
*4.1 ‚ïé ‚õ≠ TRUE üîë*
*4.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *5Ô∏è‚É£ ùêÄùêîùêìùêé ùêëùêÑùêèùêãùêò*
*5.1 ‚ïé ‚õ≠ TRUE üîë*
*5.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *6Ô∏è‚É£ ùêÅùêéùêì ùêéùêçùêãùêàùêçùêÑ ùêéùêÖùêÖùêãùêàùêçùêÑ*
*6.1 ‚ïé ‚õ≠ TRUE üîë*
*6.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *7Ô∏è‚É£ ùêåùêíùêÜ ùêëùêÑùêÄùêÉ*
*7.1 ‚ïé ‚õ≠ TRUE üîë*
*7.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *8Ô∏è‚É£ ùêåùêíùêÜ ùêëùêÑùêÄùêÇùêì*
*8.1 ‚ïé ‚õ≠ TRUE üîë*
*8.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *9Ô∏è‚É£ ùêÄùêçùêìùêà ùêãùêàùêçùêä*
*9.1 ‚ïé ‚õ≠ TRUE üîë*
*9.2 ‚ïé ‚õ≠ FALSE üîê*
*9.3 ‚ïé ‚õ≠ REMOVE ‚ÄºÔ∏è*
‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£0Ô∏è‚É£ ùêÄùêçùêìùêà ùêÅùêéùêì*
*10.1 ‚ïé ‚õ≠ TRUE üîë*
*10.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£1Ô∏è‚É£ ùêÄùêîùêìùêé ùêíùêìùêÄùêìùêîùêí ùêëùêÑùêèùêãùêò*
*11.1 ‚ïé ‚õ≠ TRUE üîë*
*11.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£2Ô∏è‚É£ ùêÄùêîùêìùêé ùêíùêìùêÄùêìùêîùêí ùêëùêÑùêÄùêÇùêì*
*12.1 ‚ïé ‚õ≠ TRUE üîë*
*12.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£3Ô∏è‚É£ ùêÄùêçùêìùêà ùêÅùêéùêì*
*13.1 ‚ïé ‚õ≠ TRUE üîë*
*13.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§

* *1Ô∏è‚É£4Ô∏è‚É£ ùêÄùêçùêìùêà ùêÅùêÄùêÉ*
*14.1 ‚ïé ‚õ≠ TRUE üîë*
*14.2 ‚ïé ‚õ≠ FALSE üîê*
‚ú§ ============================ ‚ú§


> ü•∑·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è ·¥Ñ è ô·¥á Ä  è·¥Ä·¥ã·¥ú·¥¢·¥Ä ·¥õ·¥á·¥Ä·¥ç‚ö†Ô∏è`;

        const vv = await conn.sendMessage(from, { image: { url: "https://files.catbox.moe/o0cp0d.jpeg"}, caption: desc }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        break;
                    case '1.3':               
                          reply(".update MODE:group");
                      break;
                    case '1.4':     
                        reply(".update MODE:inbox");
                      break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                    break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                    break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                    break;                    
                    case '4.1':    
                        reply(".update AUTO_STICKER:true");
                    break;
                    case '4.2':    
                        reply(".update AUTO_STICKER:false");
                    break;                                        
                    case '5.1':    
                        reply(".update AUTO_REPLY:true");
                    break;
                    case '5.2':    
                        reply(".update AUTO_REPLY:false");
                    break;                        
                    case '6.1':    
                        reply(".update ALLWAYS_OFFLINE:true");
                    break; 
                    case '6.2':    
                        reply(".update ALLWAYS_OFFLINE:false");
                    break;                       
                    case '7.1':    
                        reply(".update READ_MESSAGE:true");
                    break;
                    case '7.2':    
                        reply(".update READ_MESSAGE:false");
                    break;
                    case '8.1':    
                        reply(".update AUTO_REACT:true");
                    break;
                    case '8.2':    
                        reply(".update AUTO_REACT:false");
                    break;
                    case '9.1':    
                        reply(".update ANTI_LINK:true");
                        reply(".update ANTI_LINKK:false");
                    break;
                    case '9.2':    
                        reply(".update ANTI_LINKK:true");
                        reply(".update ANTI_LINK:false");
                    break;
                    case '9.3':    
                        reply(".update ANTI_LINK:false");
                        reply(".update ANTI_LINKK:false");
                    break;
                    case '10.1':
                        reply(".update AUTO_REACT_STATUS:true");
                    break;
                    case '10.2':
                        reply(".update AUTO_REACT_STATUS:fales");
                    break;
                    case '10.3':
                        reply(".update AUTO_STATUS_REPLY:true");
                    break;
                    case '10.4':
                        reply(".update AUTO_STATUS_REPLY:fales");
                    break;

                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
